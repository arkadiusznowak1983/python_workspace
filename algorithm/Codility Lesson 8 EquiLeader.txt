# [Codility Lesson 8 EquiLeader]
#####################################################################################################################################################
A non-empty array A consisting of N integers is given.

The leader of this array is the value that occurs in more than half of the elements of A.

An equi leader is an index S such that 0 ≤ S < N − 1 and two sequences A[0], A[1], ..., A[S] and A[S + 1], A[S + 2], ..., A[N − 1] have leaders of the same value.

For example, given array A such that:

    A[0] = 4
    A[1] = 3
    A[2] = 4
    A[3] = 4
    A[4] = 4
    A[5] = 2
we can find two equi leaders:

0, because sequences: (4) and (3, 4, 4, 4, 2) have the same leader, whose value is 4.
2, because sequences: (4, 3, 4) and (4, 4, 2) have the same leader, whose value is 4.
The goal is to count the number of equi leaders.

Write a function:

def solution(A)

that, given a non-empty array A consisting of N integers, returns the number of equi leaders.

For example, given:

    A[0] = 4
    A[1] = 3
    A[2] = 4
    A[3] = 4
    A[4] = 4
    A[5] = 2
the function should return 2, as explained above.

Write an efficient algorithm for the following assumptions:

N is an integer within the range [1..100,000];
each element of array A is an integer within the range [−1,000,000,000..1,000,000,000].
#####################################################################################################################################################
def getleader(A):
    result = dict()
    if len(A) == 1:
        return 0
    for i in range(0, len(A)):
        if A[i] in result:
            result[A[i]] = result[A[i]] + 1
            if result[A[i]] > len(A)/2:
                return i
        else:
            result[A[i]] = 1
    return -1

def solution(A):
    counter = 0
    for i in range(1, len(A)):
        tab1 = A[:i]
        tab2 = A[i:]
        if tab1[getleader(tab1)] == tab2[getleader(tab2)]:
            counter = counter + 1
    return counter
#####################################################################################################################################################